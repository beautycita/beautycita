version: '3.8'

services:
  # ==================== MONITORING ====================
  prometheus:
    image: prom/prometheus:latest
    container_name: beautycita-prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--web.route-prefix=/prometheus'
      - '--web.external-url=https://beautycita.com/prometheus/'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/rules:/etc/prometheus/rules
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - beautycita-network
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: beautycita-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_DOMAIN=beautycita.com
      - GF_SERVER_ROOT_URL=https://beautycita.com/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_SERVER_HTTP_PORT=3000
      - GF_SMTP_ENABLED=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    ports:
      - "3000:3000"
    networks:
      - beautycita-network
    depends_on:
      - prometheus
    profiles:
      - monitoring

  # ==================== EXPORTERS ====================
  node-exporter:
    image: prom/node-exporter:latest
    container_name: beautycita-node-exporter
    restart: unless-stopped
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    ports:
      - "9100:9100"
    networks:
      - beautycita-network
    profiles:
      - monitoring

  # Nginx Exporter - Monitors Nginx metrics
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: beautycita-nginx-exporter
    restart: unless-stopped
    network_mode: host
    command:
      - '--nginx.scrape-uri=https://localhost/stub_status'
      - '--web.listen-address=:9113'
    environment:
      - SSL_VERIFY=false
    profiles:
      - monitoring

  # Postgres Exporter - Monitors PostgreSQL metrics
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: beautycita-postgres-exporter
    restart: unless-stopped
    network_mode: host
    environment:
      DATA_SOURCE_NAME: "postgresql://beautycita_app:qGXA1CR3FVnsq4fp78Z6h31ROzzU2DJsSF0lX1Aq7Uk=@localhost:5432/beautycita?sslmode=disable"
    profiles:
      - monitoring

  # Redis Exporter - Monitors Redis metrics
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: beautycita-redis-exporter
    restart: unless-stopped
    network_mode: host
    environment:
      REDIS_ADDR: "localhost:6379"
    profiles:
      - monitoring

  # cAdvisor - Container metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: beautycita-cadvisor
    restart: unless-stopped
    privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /dev/disk:/dev/disk:ro
    ports:
      - "8080:8080"
    networks:
      - beautycita-network
    profiles:
      - monitoring
    devices:
      - /dev/kmsg

  # Blackbox Exporter - HTTP/HTTPS/TCP probing
  blackbox-exporter:
    image: prom/blackbox-exporter:latest
    container_name: beautycita-blackbox-exporter
    restart: unless-stopped
    command:
      - '--config.file=/etc/blackbox/blackbox.yml'
    volumes:
      - ./monitoring/blackbox.yml:/etc/blackbox/blackbox.yml
    ports:
      - "9115:9115"
    networks:
      - beautycita-network
    profiles:
      - monitoring

  # ==================== ALERT MANAGER ====================
  alertmanager:
    image: prom/alertmanager:latest
    container_name: beautycita-alertmanager
    restart: unless-stopped
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    volumes:
      - ./monitoring/alertmanager:/etc/alertmanager
      - alertmanager_data:/alertmanager
    ports:
      - "9093:9093"
    networks:
      - beautycita-network
    profiles:
      - monitoring


  # ==================== LOKI (Log Aggregation) ====================
  loki:
    image: grafana/loki:latest
    container_name: beautycita-loki
    restart: unless-stopped
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    volumes:
      - loki_data:/loki
      - ./monitoring/loki-config.yaml:/etc/loki/local-config.yaml
    networks:
      - beautycita-network
    profiles:
      - monitoring

  # Promtail - Collects logs and sends to Loki
  promtail:
    image: grafana/promtail:latest
    container_name: beautycita-promtail
    restart: unless-stopped
    volumes:
      - ./monitoring/promtail-config.yaml:/etc/promtail/config.yml
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - beautycita-network
    depends_on:
      - loki
    profiles:
      - monitoring

# ==================== VOLUMES ====================
volumes:
  loki_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  alertmanager_data:
    driver: local

# ==================== NETWORKS ====================
networks:
  beautycita-network:
    driver: bridge