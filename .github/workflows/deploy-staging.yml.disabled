name: Deploy to Staging

on:
  push:
    branches:
      - develop
      - staging
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install backend dependencies
        run: npm ci

      - name: Run backend tests
        run: npm test
        env:
          NODE_ENV: test

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Build frontend (test)
        working-directory: ./frontend
        run: npm run build

  deploy:
    name: Deploy to Staging Server
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name != 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Staging
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USERNAME }}
          key: ${{ secrets.STAGING_SSH_KEY }}
          port: ${{ secrets.STAGING_SSH_PORT || 22 }}
          script: |
            set -e
            echo "ðŸš€ Deploying to staging..."

            cd /var/www/beautycita-staging

            git fetch origin ${{ github.ref_name }}
            git reset --hard origin/${{ github.ref_name }}

            # Install dependencies
            npm install
            cd frontend && npm install && cd ..

            # Build frontend
            cd frontend && npm run build && cd ..

            # Restart services
            sudo -u www-data pm2 restart beautycita-staging-api

            echo "âœ… Staging deployment complete!"
